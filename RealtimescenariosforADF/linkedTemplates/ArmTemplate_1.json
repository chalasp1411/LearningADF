{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "RealtimescenariosforADF"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/pl_copydatatoadls')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "copydatatoadls",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "lkforuspGetCopyActivitySQLToADLS",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "@activity('lkforuspGetCopyActivitySQLToADLS').output.firstRow.CopyActivitySQLQuery",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ds_adk_table",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_adk_csv",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "lkforuspGetCopyActivitySQLToADLS",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[dbo].[uspGetCopyActivitySQLToADLS]",
								"storedProcedureParameters": {
									"CopyActivitySQLTable": {
										"type": "String",
										"value": {
											"value": "@pipeline().parameters.CopyActivitySQLTable",
											"type": "Expression"
										}
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "ds_metadatadb",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"CopyActivitySQLTable": {
						"type": "string",
						"defaultValue": "SalesLT.Address"
					},
					"CopyActivitySQLDBConnectionString": {
						"type": "string",
						"defaultValue": "kvforstorageaccount"
					}
				},
				"annotations": [],
				"lastPublishTime": "2023-04-07T16:13:12Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_incrementalload')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "copydatatoadls",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "lkforuspGetCopyActivitySQLToADLS",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "@{activity('lkforuspGetCopyActivitySQLToADLS').output.firstRow.CopyActivitySQLQuery} where @{activity('lkforuspGetCopyActivitySQLToADLS').output.firstRow.watermarkcolumn} > '@{activity('lkgetoldwatermarkvalue').output.firstRow.LogWaterMarkValue}' and @{activity('lkforuspGetCopyActivitySQLToADLS').output.firstRow.watermarkcolumn} <= '@{activity('lkgetnewwatermarkvalue').output.firstRow.Max_ModifiedDate}'\n",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ds_adk_table",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_adk_csv",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "lkforuspGetCopyActivitySQLToADLS",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "lkgetoldwatermarkvalue",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "lkgetnewwatermarkvalue",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[dbo].[uspGetCopyActivitySQLToADLS]",
								"storedProcedureParameters": {
									"CopyActivitySQLTable": {
										"type": "String",
										"value": {
											"value": "@pipeline().parameters.CopyActivitySQLTable",
											"type": "Expression"
										}
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "ds_metadatadb",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "lkgetoldwatermarkvalue",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[dbo].[GetWaterMarkValue]",
								"storedProcedureParameters": {
									"CopyActivitySQLTable": {
										"type": "String",
										"value": {
											"value": "@pipeline().parameters.CopyActivitySQLTable",
											"type": "Expression"
										}
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "ds_metadatadb",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "lkgetnewwatermarkvalue",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "SELECT MAX(ModifiedDate) as Max_ModifiedDate FROM @{pipeline().parameters.CopyActivitySQLTable}",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "ds_metadatadb",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "splogwatermarkvalue",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "copydatatoadls",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[LogWaterMarkValue]",
							"storedProcedureParameters": {
								"CopyActivitySQLTable": {
									"value": {
										"value": "@pipeline().parameters.CopyActivitySQLTable",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "AzureSqlDatabase1",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"CopyActivitySQLTable": {
						"type": "string",
						"defaultValue": "SalesLT.Address"
					},
					"CopyActivitySQLDBConnectionString": {
						"type": "string",
						"defaultValue": "Adventureworksdbconnectionstring"
					}
				},
				"annotations": [],
				"lastPublishTime": "2023-04-07T16:13:12Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_incrementalloadsqltosql')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "copydatatoadls",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "lkforuspGetCopyActivitySQLToADLS",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "@{activity('lkforuspGetCopyActivitySQLToADLS').output.firstRow.CopyActivitySQLQuery} where @{activity('lkforuspGetCopyActivitySQLToADLS').output.firstRow.watermarkcolumn} > '@{activity('lkgetoldwatermarkvalue').output.firstRow.LogWaterMarkValue}' and @{activity('lkforuspGetCopyActivitySQLToADLS').output.firstRow.watermarkcolumn} <= '@{activity('lkgetnewwatermarkvalue').output.firstRow.Max_ModifiedDate}'\n",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "upsert",
								"upsertSettings": {
									"useTempDB": true,
									"keys": {
										"value": "@array(activity('lkforuspGetCopyActivitySQLToADLS').output.firstRow.UpsertKeyColumn)",
										"type": "Expression"
									}
								},
								"sqlWriterUseTableLock": false,
								"tableOption": "autoCreate",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ds_adk_table",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_adk_table_sqldb",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "lkforuspGetCopyActivitySQLToADLS",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "lkgetoldwatermarkvalue",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "lkgetnewwatermarkvalue",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[dbo].[uspGetCopyActivitySQLToSQL]",
								"storedProcedureParameters": {
									"CopyActivitySQLTable": {
										"type": "String",
										"value": {
											"value": "@pipeline().parameters.CopyActivitySQLTable",
											"type": "Expression"
										}
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "ds_metadatadb",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "lkgetoldwatermarkvalue",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[dbo].[GetWaterMarkValue]",
								"storedProcedureParameters": {
									"CopyActivitySQLTable": {
										"type": "String",
										"value": {
											"value": "@pipeline().parameters.CopyActivitySQLTable",
											"type": "Expression"
										}
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "ds_metadatadb",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "lkgetnewwatermarkvalue",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "SELECT MAX(ModifiedDate) as Max_ModifiedDate FROM @{pipeline().parameters.CopyActivitySQLTable}",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "ds_metadatadb",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "splogwatermarkvalue",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "copydatatoadls",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[LogWaterMarkValue]",
							"storedProcedureParameters": {
								"CopyActivitySQLTable": {
									"value": {
										"value": "@pipeline().parameters.CopyActivitySQLTable",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "AzureSqlDatabase1",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"CopyActivitySQLTable": {
						"type": "string",
						"defaultValue": "SalesLT.Address"
					},
					"CopyActivitySQLDBConnectionString": {
						"type": "string",
						"defaultValue": "Adventureworksdbconnectionstring"
					}
				},
				"annotations": [],
				"lastPublishTime": "2023-04-07T16:13:12Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/dfRestAPItoADLS')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ds_weatherdata",
								"type": "DatasetReference"
							},
							"name": "dsRestAPI"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "ds_WeatherAPIdata",
								"type": "DatasetReference"
							},
							"name": "APItoADLS"
						}
					],
					"transformations": [
						{
							"name": "flattenJson"
						}
					],
					"scriptLines": [
						"source(output(",
						"          body as (data as (employee_age as short, employee_name as string, employee_salary as integer, id as short, profile_image as string)[], message as string, status as string),",
						"          headers as [string,string]",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     httpMethod: 'GET',",
						"     timeout: 30,",
						"     requestInterval: 0,",
						"     paginationRules: ['supportRFC5988' -> 'true'],",
						"     responseFormat: ['type' -> 'json', 'documentForm' -> 'documentPerLine']) ~> dsRestAPI",
						"dsRestAPI foldDown(unroll(body.data, body.data),",
						"     mapColumn(",
						"          employee_age = body.data.employee_age,",
						"          employee_name = body.data.employee_name,",
						"          employee_salary = body.data.employee_salary,",
						"          id = body.data.id,",
						"          profile_image = body.data.profile_image",
						"     ),",
						"     skipDuplicateMapInputs: false,",
						"     skipDuplicateMapOutputs: false) ~> flattenJson",
						"flattenJson sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     partitionFileNames:['Employees.csv'],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     mapColumn(",
						"          employee_age,",
						"          employee_name,",
						"          employee_salary,",
						"          id,",
						"          profile_image",
						"     ),",
						"     partitionBy('hash', 1)) ~> APItoADLS"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_copydataforeachloop')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "uspGetCopyActivityExecutionList",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[dbo].[uspGetCopyActivityExecutionList]",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "ds_metadatadb",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "foreach_alltables",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "uspGetCopyActivityExecutionList",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('uspGetCopyActivityExecutionList').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"activities": [
								{
									"name": "Executingchildpipeline",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "pl_copydatatoadls",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"CopyActivitySQLTable": {
												"value": "@item().CopyActivitySQLTable",
												"type": "Expression"
											},
											"CopyActivitySQLDBConnectionString": {
												"value": "@item().CopyActivitySQLDBConnectionString",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/pl_copydatatoadls')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_copydataforeachloopincrementalload')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "uspGetCopyActivityExecutionList",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[dbo].[uspGetCopyActivityExecutionList]",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "ds_metadatadb",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "foreach_alltables",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "uspGetCopyActivityExecutionList",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('uspGetCopyActivityExecutionList').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"activities": [
								{
									"name": "Executingchildpipeline",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "pl_incrementalload",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"CopyActivitySQLTable": {
												"value": "@item().CopyActivitySQLTable",
												"type": "Expression"
											},
											"CopyActivitySQLDBConnectionString": {
												"value": "@item().CopyActivitySQLDBConnectionString",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/pl_incrementalload')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_copydataforeachloopincrementalload_sqlserver')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "uspGetCopyActivityExecutionList",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[dbo].[uspGetCopyActivityExecutionList]",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "ds_metadatadb",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "foreach_alltables",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "uspGetCopyActivityExecutionList",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('uspGetCopyActivityExecutionList').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"activities": [
								{
									"name": "Executingchildpipeline",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "pl_incrementalloadsqltosql",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"CopyActivitySQLTable": {
												"value": "@item().CopyActivitySQLTable",
												"type": "Expression"
											},
											"CopyActivitySQLDBConnectionString": {
												"value": "@item().CopyActivitySQLDBConnectionString",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/pl_incrementalloadsqltosql')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_copydatafromRestAPItoADLS')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "dfRestAPItoADLS",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "dfRestAPItoADLS",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"dsRestAPI": {},
									"APItoADLS": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/dfRestAPItoADLS')]"
			]
		}
	]
}